//
//  UserInfoManager.m
//  TestRedCollar
//
//  Created by Hepburn Alex on 14-5-6.
//  Copyright (c) 2014年 Hepburn Alex. All rights reserved.
//

#import "UserInfoManager.h"
#import "sys/xattr.h"
#import <MediaPlayer/MediaPlayer.h>

static UserInfoManager *gUserManager = nil;

@implementation UserInfoManager

+ (UserInfoManager *)Share {
    if (!gUserManager) {
        gUserManager = [[UserInfoManager alloc] init];
    }
    return gUserManager;
}

- (id)init {
    self = [super init];
    if (self) {
        self.mCityID = @"1";
        self.mfMaxWidth = MAX(KscreenWidth, KscreenHeigh);
    }
    return self;
}

+ (NSDate *)GetStartDate:(NSDate *)date {
    NSDateFormatter *df = [[NSDateFormatter alloc] init];
    df.dateFormat = @"yyyy-MM-dd";
    
    NSString *dateString = [df stringFromDate:date];
    return [df dateFromString:dateString];
}

+ (NSString *)GetFormatDateString:(NSDate *)date {
    NSDate *startdate = [UserInfoManager GetStartDate:[NSDate date]];
    
    NSCalendar *calendar = [NSCalendar currentCalendar];
    
    NSDateComponents *components = [calendar components:NSYearCalendarUnit|NSMonthCalendarUnit|NSDayCalendarUnit|NSHourCalendarUnit|NSMinuteCalendarUnit|NSSecondCalendarUnit fromDate:date toDate:startdate options:0];
    NSInteger year = [components year];
    NSInteger month = [components month];
    NSInteger day = [components day];
    NSInteger hour = [components hour];
    NSInteger minute = [components minute];
    NSInteger second = [components second];
    
    NSInteger iOffset = (hour*60+minute)*60+second;
    
    if (year == 0 && month == 0 && day < 2) {
        NSString *title = nil;
        if (day <= 0) {
            if (iOffset <= 0) {
                NSDateComponents *components = [calendar components:NSYearCalendarUnit|NSMonthCalendarUnit|NSDayCalendarUnit fromDate:date toDate:[NSDate date] options:0];
                NSInteger hours = [components hour];
                NSInteger minutes = [components minute];
                if (hours == 0) {
                    return [NSString stringWithFormat:@"%d分钟前", (int)minutes];
                }
                else if (hours <= 3) {
                    return [NSString stringWithFormat:@"%d小时前", (int)hours];
                }
                else {
                    title = @"今天";
                }
            }
            else {
                title = @"昨天";
            }
        }
        else if (day == 1) {
            title = @"前天";
        }
        NSDateFormatter *df = [[NSDateFormatter alloc] init];
        df.dateFormat = [NSString stringWithFormat:@"%@ HH:mm",title];
        return [df stringFromDate:date];
    }
    NSDateFormatter *df = [[NSDateFormatter alloc] init];
    df.dateFormat = @"MM-dd HH:mm";
    return [df stringFromDate:date];
}

+ (NSString *)GetFormatDateByInterval:(NSTimeInterval)interval {
    NSDate *date = [NSDate dateWithTimeIntervalSince1970:interval];
    return [UserInfoManager GetFormatDateString:date];
}

+ (BOOL)addSkipBackupAttributeToItemAtURL:(NSURL *)URL{
    const char* filePath = [[URL path] fileSystemRepresentation];
    const char* attrName = "com.apple.MobileBackup";
    u_int8_t attrValue = 1;
    int result = setxattr(filePath, attrName, &attrValue, sizeof(attrValue), 0, 0);
    return result == 0;
}

+ (void)AddiCloudBackUp {
    NSString *docDir = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    NSString *libDir = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    [UserInfoManager addSkipBackupAttributeToItemAtURL:[NSURL URLWithString:docDir]];
    [UserInfoManager addSkipBackupAttributeToItemAtURL:[NSURL URLWithString:libDir]];
}

+ (int)sinaCountWord:(NSString*)s
{
    int i,n=[s length],l=0,a=0,b=0;
    unichar c;
    for(i=0;i<n;i++){
        c=[s characterAtIndex:i];
        if(isblank(c)){
            b++;
        }else if(isascii(c)){
            a++;
        }else{
            l++;
        }
    }
    if(a==0 && l==0) return 0;
    return l+(int)ceilf((float)(a+b)/2.0);
}

#pragma mark - 用户信息
- (BOOL)mbLogin {
    return (self.mUserDict != nil);
}
- (void)SetUserValue:(NSString *)value forKey:(NSString *)key {
    if (!value || !key) {
        return;
    }
    NSMutableDictionary *userinfo = [[NSUserDefaults standardUserDefaults] objectForKey:@"UserInfo"];
    
    if (userinfo && [userinfo isKindOfClass:[NSDictionary class]]) {
        NSMutableDictionary *userinfo2 = [NSMutableDictionary dictionaryWithDictionary:userinfo];
        [userinfo2 setObject:value forKey:key];
        
        [[NSUserDefaults standardUserDefaults] setObject:userinfo2 forKey:@"UserInfo"];
        [[NSUserDefaults standardUserDefaults] synchronize];
    }
    else {
        NSLog(@"SetUserValue Error:userinfo");
    }
}

- (NSString *)GetUserValueforKey:(NSString *)key {
    NSDictionary *userinfo = [[NSUserDefaults standardUserDefaults] objectForKey:@"UserInfo"];
    if (userinfo && [userinfo isKindOfClass:[NSDictionary class]]) {
        return [userinfo objectForKey:key];
    }
    return nil;
}

- (NSString *)mToken {
    return [[NSUserDefaults standardUserDefaults] objectForKey:@"token"];
}

- (void)setMToken:(NSString *)value {
    if (value) {
        [[NSUserDefaults standardUserDefaults] setObject:value forKey:@"token"];
    }
    else {
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"token"];
    }
    [[NSUserDefaults standardUserDefaults] synchronize];
}

- (NSDictionary *)mUserDict {
    return [[NSUserDefaults standardUserDefaults] objectForKey:@"UserInfo"];
}

- (void)setMUserDict:(NSDictionary *)dict {
    if (dict) {
        dict = [self GetFormatDict:dict];
        [[NSUserDefaults standardUserDefaults] setObject:dict forKey:@"UserInfo"];
    }
    else {
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"UserInfo"];
    }
    [[NSUserDefaults standardUserDefaults] synchronize];
}
- (NSDictionary *)GetFormatDict:(NSDictionary *)dict1 {
    NSMutableDictionary *dict = [NSMutableDictionary dictionaryWithDictionary:dict1];
    for (NSString *key in dict.allKeys) {
        id target = [dict objectForKey:key];
        if ([target isKindOfClass:[NSNull class]]) {
            [dict removeObjectForKey:key];
        }
    }
    return dict;
}
- (NSString *)mUserID {
    return [self GetUserValueforKey:@"id"];
}

- (void)setMUserID:(NSString *)value {
    [self SetUserValue:value forKey:@"id"];
}

- (int)miSex {
    return [[self GetUserValueforKey:@"gender"] intValue];
}

- (void)setMiSex:(int)value {
    [self SetUserValue:[NSString stringWithFormat:@"%d", value] forKey:@"gender"];
}
- (NSString *)mHeadImgUrl {
    return [self GetUserValueforKey:@"headImgUrl"];
}

- (void)setMHeadImgUrl:(NSString *)value {
    [self SetUserValue:value forKey:@"headImgUrl"];
}
- (NSString *)mNickName {
    return [self GetUserValueforKey:@"nickName"];
}

- (void)setMNickName:(NSString *)value {
    [self SetUserValue:value forKey:@"nickName"];
}

@end
